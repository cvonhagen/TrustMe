services:
  # Backend Service (Go/Fiber) - verwendet externe Neon PostgreSQL DB
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: trustme-backend
    ports:
      - "8080:8080"
    env_file:
      - .env.neon
    volumes:
      - ./backend:/app
      - /app/tmp
    networks:
      - trustme-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend Service (React/Vite Development)
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: trustme-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_BACKEND_URL=http://localhost:8080/api/v1
      - VITE_APP_NAME=TrustMe Password Manager
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - trustme-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Browser Extension Build Service (nur für Development)
  browser-extension:
    build: 
      context: ./browser-extension
      dockerfile: Dockerfile
      target: development
    container_name: trustme-extension
    volumes:
      - ./browser-extension/dist:/app/dist
      - ./browser-extension/src:/app/src:ro
    environment:
      - BACKEND_URL=http://localhost:8080/api/v1
      - FRONTEND_URL=http://localhost:5173
    networks:
      - trustme-network

  # MailHog für lokale E-Mail-Tests (Development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: trustme-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - trustme-network

networks:
  trustme-network:
    driver: bridge
    name: trustme-network