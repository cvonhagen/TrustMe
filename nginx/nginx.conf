# Nginx Configuration für TrustMe Password Manager
# Production-ready Setup mit Security Headers und Reverse Proxy

upstream backend {
    server trustme-backend-prod:3030;
    keepalive 32;
}

upstream frontend {
    server trustme-frontend-prod:80;
    keepalive 32;
}

# Rate Limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

# Server Block für HTTP (Redirect zu HTTPS)
server {
    listen 80;
    server_name trustme.local localhost;
    
    # Redirect all HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main Server Block für HTTPS
server {
    listen 443 ssl http2;
    server_name trustme.local localhost;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/trustme.crt;
    ssl_certificate_key /etc/nginx/ssl/trustme.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:; frame-ancestors 'none';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # API Routes (Backend)
    location /api/ {
        # Rate Limiting
        limit_req zone=api burst=20 nodelay;
        
        # Proxy Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy Configuration
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer Settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Special Rate Limiting für Login
    location /api/v1/auth/login {
        limit_req zone=login burst=3 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Health Check
    location /health {
        proxy_pass http://backend/health;
        access_log off;
    }

    # Frontend Routes (React SPA)
    location / {
        # Try files first, then fallback to index.html for SPA routing
        try_files $uri $uri/ @frontend;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://frontend;
        }
    }

    # Frontend Fallback
    location @frontend {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # SPA Fallback
        proxy_intercept_errors on;
        error_page 404 = @spa_fallback;
    }

    # SPA Fallback für React Router
    location @spa_fallback {
        proxy_pass http://frontend/;
    }

    # Browser Extension Download
    location /extension {
        alias /var/www/extension;
        autoindex on;
        add_header Content-Disposition "attachment";
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Logging Configuration
error_log /var/log/nginx/error.log warn;
access_log /var/log/nginx/access.log combined;